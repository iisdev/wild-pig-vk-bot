import vk_api, random, time
import ast #.literal_eval()
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.utils import get_random_id

from vk_api.upload import VkUpload
import requests
from io import BytesIO

import sqlite3, sys # db lib's
from os.path import abspath
import os
from wild_pig_classes import *


#–ë–ª–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π

#send photo
def upload_photo(upload, photo):
    response = upload.photo_messages(photo)[0]

    owner_id = response['owner_id']
    photo_id = response['id']
    access_key = response['access_key']

    return owner_id, photo_id, access_key

def upload_photo_url(upload, url):
    img = requests.get(url).content
    f = BytesIO(img)

    response = upload.photo_messages(f)[0]

    owner_id = response['owner_id']
    photo_id = response['id']
    access_key = response['access_key']

    return owner_id, photo_id, access_key

def send_photo(vk, peer_id, owner_id, photo_id, access_key):
    attachment = f'photo{owner_id}_{photo_id}_{access_key}'
    vk.messages.send(
        random_id=get_random_id(),
        peer_id=peer_id,
        attachment=attachment
    )

def update_player(player):
    player_id_str = player.player_id_str
    
    player_obj_str = player.return_prop_str() # –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞
    req = "UPDATE users SET info = \"{}\" WHERE id = \"{}\"".format(player_obj_str, player_id_str)
    
    cursor.execute(req)
    db.commit()

def sender(u_id, text, dop_id = None):
    try:
        vk_session.method('messages.send', {'user_id' : u_id, 'message' : text, 'random_id' : get_random_id() })#random.randint(0, 1000)})
    except:
        if dop_id != None:
            vk_session.method('messages.send', {'user_id' : dop_id, 'message' : 'üí©–ü—Ä–æ—Å—Ç–∏ —á–µ–ª —è –µ—â–µ –Ω–µ —É–º–µ—é –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–∞–∫–æ–µ(((', 'random_id' : get_random_id() })
        else:
            vk_session.method('messages.send', {'user_id' : u_id, 'message' : 'üí©–ü—Ä–æ—Å—Ç–∏ —á–µ–ª —è –µ—â–µ –Ω–µ —É–º–µ—é –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–∞–∫–æ–µ(((', 'random_id' : get_random_id() })




#–ë–ª–æ–∫ "—Å–∏—Å—Ç–µ–º–Ω—ã—Ö" –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
#------------------------------
main_token = 'c46cd6350bd66bbe20b9eaf6a56189c434453555b827e23e58fc2feaaef48890fa2df4508515431e4385a'
vk_session = vk_api.VkApi(token = main_token)
session_api = vk_session.get_api()
longpoll = VkLongPoll(vk_session)
upload = VkUpload(session_api)
#------------------------------

#–ë–ª–æ–∫ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
#------------------------------
users = {}#{'340297072': \
        #            { 'connect': False, 'location': 1, 'pig': \
        #            { 'name': '–õ—ë–Ω—á–∏–∫', 'level': 1, 'health': 3, 'inventory': [] } }}
free_users = []
IMG_PATH = 'D:\\Code\\vkbot\\img\\pigs\\'
#------------------------------


# db connect
#------------------------------
db = sqlite3.connect(sys.path[0]+'\\server.db')
cursor = db.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS users (
    id TEXT,
    info TEXT
)""")
db.commit()
#------------------------------

for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW:
        if event.to_me:
            msg = event.text#.lower()
            u_id = event.user_id
            u_id_str = str(u_id)
            #photo_url = 'https://sun9-62.userapi.com/impg/0gGN-ROTeakuhk0AMQ8x4k3bFSgq4ZSasicGww/Ut8335M6ByI.jpg?size=1280x854&quality=96&sign=89421a1f36f66be28cf47c510248f298&type=album'
            #url –≤–∞–ª–µ—Ä—ã
            
            
            
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ
            if not(u_id_str in users): # new user
                cursor.execute( f"SELECT info FROM users WHERE id = {u_id_str}" )
                bd_ans = cursor.fetchone() # –æ—Ç–≤–µ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∑–∞–ø—Ä–æ—Å
                
                if bd_ans is None:
                    
                    default_prop = {'connect': False, 'img': None, 'name': None, 'level': 1, 'points': 0, 'inventory': {}, 'location': ''} # –°–≤–æ–π—Å—Ç–∞ –∏–≥—Ä–æ–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    users[u_id_str] = Player(user_id, default_prop)
                    player = users[u_id_str] # –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞
                    
                    #–ü—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:
                    pigs_imgs = os.listdir(IMG_PATH) #—Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–∞–±–∞–Ω—á–∏–∫–æ–≤
                    pig_img_fname = random.choice(pigs_imgs)
                    pig_img_path = IMG_PATH + pig_img_fname # –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å—Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    
                    player.img = pig_img_path
                    
                    sender(u_id, '–¢–µ–ø–µ—Ä—å —ç—Ç–æ —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –∫–∞–±–∞–Ω—á–∏–∫. –ó–∞–±–æ—Ç—å—Å—è –æ –Ω–µ–º!')
                    send_photo(session_api, u_id, *upload_photo(upload, pig_img_path))
                    player.name = -1 # –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–º–µ–Ω–∏
                    sender(u_id, '–ü—Ä–∏–¥—É–º–∞–π —Å–≤–æ–µ–º—É –∫–∞–±–∞–Ω—á–∏–∫—É –∏–º—è:')
                    
                    obj = player.return_prop_str() # –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞
                    cursor.execute("INSERT INTO users VALUES (?, ?)", (u_id_str, obj))
                    db.commit()
                    
                    #send_photo(session_api, u_id, *upload_photo_url(upload, photo_url)) # –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–∞–ª–µ—Ä—ã
                else:
                    users[u_id_str] = Player(u_id, ast.literal_eval(bd_ans[0])) # –∑–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä–µ–∫—Ç–∞ –∏–≥—Ä–æ–∫–∞ –∏–∑ –±–¥
                    player = users[u_id_str] # –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞
                    
                    sender(u_id, '–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ' + player.name)
                    send_photo(session_api, u_id, *upload_photo(upload, player.img))
                    #send_photo(session_api, u_id, *upload_photo_url(upload, photo_url)) # –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–∞–ª–µ—Ä—ã
                continue
            else:
                player = users[u_id_str] # –æ–±—ä–µ–∫—Ç –∏–≥—Ä–æ–∫–∞
                    
            
            
            if player.is_connect():
                companion_id = player.companion()
                companion = users[companion_id] # –û–±—ä–µ–∫—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
            
            
            # –ë–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            if msg == '/find': # –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
                
                if player.is_connect(): #(users[str(u_id)]['connect'] != False): # 
                    companion.disconnect()
                    sender(companin.player_id 'üò≠–ö–∞–±–∞–Ω—á–∏–∫ –æ—Ç–∫–ª—é—á–∏–ª—Å—è. –ù–∞–ø–∏—à–∏—Ç–µ /find —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω–æ–≤–æ–≥–æ —á–µ–ø—É—à–∏–ª—É')
                    player.disconnect()
                
                sender(player.player_id, 'üîé–ò—â—É –±–æ–π—á–∏–∫–∞...')
                sender(player.player_id, '–°–µ–π—á–∞—Å —Ö–æ—Ç—è—Ç —Ç–µ–±—è: ' + str(len(free_users)))
                sender(player.player_id, '–í –∫–∞—á–∞–ª–∫–µ: ' + str(len(users)))
                
                if not(player.player_id in free_users):
                    free_users.append(player.player_id)
                   
            #–ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã
            # ----------------------------------------------------
            elif msg == '/show_u':
                sender(player.player_id, str(users))
                sender(player.player_id, '–ñ–¥—É—Ç: '+str(free_users))
            elif msg == '/close': # –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞
                for user in users:
                    sender(int(user), 'ü¶ç–í–∞–ª–µ—Ä–∞ —É—à–µ–ª –ø–∏—Ç—å –ø–∏–≤–æ –∏ –ø–µ—Ä–Ω—É–ª –Ω–∞ –ø—Ä–æ—â–∞–Ω–∏–µ')
                    player_obj = users[user]
                    if player_obj.changes: # –ï—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω—ã —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –∏–≥—Ä–æ–∫–∞
                        update_player(player)
                break
            # ----------------------------------------------------
            
            else:
                #–æ–±—â–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º –∫–∞–±–∞–Ω–æ–º
                if player.is_connect(): #(users[str(u_id)]['connect'] != False): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                    sender(companin.player_id , companion.name + ': ' + msg, player.player_id)
                    
                #–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–º–µ–Ω–∏ –∫–∞–±–∞–Ω–∞
                elif player.name == -1
                    player.name = msg
                    update_pig(player)
                    sender(player.player_id, '–ü–æ–∑–¥–≤—Ä–∞–≤–ª—è—é!!! –¢–µ–ø–µ—Ä—å —Ç–≤–æ–µ–≥–æ –∫—Ä–∞—Å–∞–≤—Ü–∞ –∑–æ–≤—É—Ç ' + msg)
                    #send_photo(session_api, u_id, *upload_photo(upload, users[u_id_str]['img']))
                else:
                    sender(u_id, 'üíû–°–ª–∞–¥–µ–Ω—å–∫–∏–π, —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –¥–æ—Ö–æ–¥—è—Ç.\n \
                    üòñ–ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –ø–æ–≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —Å –º–æ–∏–º –∑–µ–ª–µ–Ω—ã–º –∑–º–µ–µ–º –Ω–∞–ø–∏—à–∏ /find –∏ –Ω–∞–π–¥–∏ –±–æ–π—á–∏–∫–∞ —Å–µ–±–µ –ø–æ —Å–∏–ª–∞–º.\n \
                    ü§º‚Äç‚ôÇ–ù–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–π—á–∏–∫? –°–º–µ–Ω–∏ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π /find')
                
            
            
            
            #–ü—Ä–æ—Ü–µ—Å—Å —Å–≤–µ–¥–µ–Ω–∏—è —Å–≤–æ–±–æ–¥–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if len(free_users) > 1:
                #room = []
                user1 = random.choice(free_users)
                free_users.remove(user1)
                
                user2 = random.choice(free_users)
                free_users.remove(user2)
                
                #room.append(user1)
                #room.append(user2)
                
                player1 = users[str(user1)]
                player2 = users[str(user2)]
                
                player1.connect, player2.connect = user2, user1 # connect
                
                sender(user1, '–ù–∞ —É–∑–∫–æ–π –ª–µ—Å–Ω–æ–π —Ç—Ä–æ–ø–∏–Ω–∫–µ –≤—ã –ø–æ–≤—Å—Ç—Ä–µ—á–∞–ª–∏ –∫–∞–±–∞–Ω—á–∏–∫–∞ –ø–æ –∏–º–µ–Ω–∏ ' + player2.name)
                send_photo(session_api, user1, *upload_photo(upload, player2.img))
                
                sender(user2, '–ù–∞ —É–∑–∫–æ–π –ª–µ—Å–Ω–æ–π —Ç—Ä–æ–ø–∏–Ω–∫–µ –≤—ã –ø–æ–≤—Å—Ç—Ä–µ—á–∞–ª–∏ –∫–∞–±–∞–Ω—á–∏–∫–∞ –ø–æ –∏–º–µ–Ω–∏ ' + player1.name)
                send_photo(session_api, user2, *upload_photo(upload, player1.img))

db.close()


